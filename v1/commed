kafka-topics.sh --list --zookeeper zookeeper:2181
zookeeper-shell.sh zookeeper:2181 ls /brokers/ids

// 110 9092 111 9093
kafka-topics.sh --create --topic onlybroker --partitions 1 --zookeeper zookeeper:2181 --replication-factor 1

kafka-topics.sh --create --topic twobroker --partitions 1 --zookeeper zookeeper:2181 --replication-factor 2

kafka-topics.sh --create --topic twobroker2 --partitions 7 --zookeeper zookeeper:2181 --replication-factor 2

kafka-topics.sh --create --topic twobroker3 --partitions 1 --zookeeper zookeeper:2181 --replication-factor 5 // error


kafka-topics.sh --zookeeper zookeeper:2181 --describe --topic onlybroker
kafka-topics.sh --zookeeper zookeeper:2181 --describe --topic twobroker2


kafka-topics.sh --zookeeper zookeeper:2181 --delete --topic onlybroker

//Command must include exactly one action: --list, --describe, --create, --alter or --delete

kafka-topics.sh --bootstrap-server kafka0:9092 --describe --topic onlybroker


kafka-topics.sh --list --bootstrap-server=kafka0:9092,kafka1:9093
kafka-topics.sh --list --bootstrap-server=kafka1:9093



// send
kafka-console-producer.sh --bootstrap-server=kafka0:9092,kafka1:9093 --topic twobroker2

kafka-console-consumer.sh --bootstrap-server=kafka0:9092,kafka1:9093 --topic twobroker2 --partition 1
kafka-console-consumer.sh --bootstrap-server=kafka0:9092,kafka1:9093 --topic twobroker2 --property print.key=true  --property key.separator=":"



kafka-console-consumer.sh --bootstrap-server=kafka0:9092,kafka1:9093 --topic twobroker2 --from-beginning